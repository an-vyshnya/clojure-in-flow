import sandbox/clojure/clojure;
import runtime;

export {

	getClojureString(clj : Clojure) -> string;
	getClojureInt(clj : Clojure) -> int;
	getClojureList(clj : Clojure) -> CList;
	getClojureSymbolName(clj : Clojure) -> string;
	getClojureBool(clj : Clojure) -> bool;
	getClojureVectorValues(clj : Clojure) -> [Clojure];
}

getClojureString(clj : Clojure) -> string {
	switch (clj : Clojure) {
		CString(s): s
		default: ""
	}
}

getClojureInt(clj : Clojure) -> int {
	switch (clj : Clojure) {
		CInt(i): i
		default: 0;
	}
}

getClojureList(clj : Clojure) -> CList {
	switch (clj : Clojure) {
		CList(l): clj
		default: CList([])
	}
}

getClojureSymbolName(clj : Clojure) -> string {
	switch (clj : Clojure) {
		CSymbol(name, __): name
		default: ""
	}
}

getClojureBool(clj : Clojure) -> bool {
	switch (clj : Clojure) {
		CBoolean(v): v
		CNil(): false
		default: true
	}
}

getClojureVectorValues(clj : Clojure) -> [Clojure] {
	switch (clj : Clojure) {
		CVector(values): values
		default: []
	}
}